//depth is nothing but levels of a tree.
#include<bits/stdc++.h>
using namespace std;

struct Node {
    int data;
    Node* left;
    Node* right;

    Node(int x) {
        data = x;
        left = nullptr;
        right = nullptr;
    }
};

// Function to calculate the maximum depth of the binary tree
int maxDepth(Node* root) {
    if (root == nullptr) { // Base case: if tree is empty, depth is 0
        return 0;
    }
    int lh = maxDepth(root->left);  // Calculate depth of left subtree
    int rh = maxDepth(root->right); // Calculate depth of right subtree
    int result = max(lh, rh) + 1;   // Add 1 to account for the current node
    return result;
}

int main() {
    // Creating a sample binary tree
    Node* root = new Node(1);
    root->left = new Node(2);
    root->right = new Node(3);
    root->left->left = new Node(4);
    root->left->right = new Node(5);

    // Printing the maximum depth of the tree
    cout << "Max Depth of the Tree: ";
    cout << maxDepth(root) << endl;

    return 0;
}
