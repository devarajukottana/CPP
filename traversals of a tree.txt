//inorder traversal of a tree
//in all traversals we only swap the cout<<root->data value;
#include <iostream>
using namespace std;

// Definition of a binary tree node
struct Node {
    int data;
    Node* left;
    Node* right;

    Node(int val) {
        data = val;
        left = nullptr;
        right = nullptr;
    }
};

// Inorder Traversal (Recursive)
void inorder(Node* root) {
    if (root == nullptr)
        return;

    inorder(root->left);       // Traverse the left subtree
    cout << root->data << " "; // Visit the root
    inorder(root->right);      // Traverse the right subtree
}

int main() {
    // Creating a sample binary tree
    Node* root = new Node(1);
    root->left = new Node(2);
    root->right = new Node(3);
    root->left->left = new Node(4);
    root->left->right = new Node(5);

    cout << "Inorder Traversal: ";
    inorder(root); // Output: 4 2 5 1 3
    return 0;
}
