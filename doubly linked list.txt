#include <bits/stdc++.h>
using namespace std;

class node {
public:
    int data;
    node* next;
    node* prev;
    node(int val) {
        data = val;
        next = NULL;
        prev = NULL;
    }
};

void inserAthead(node* &head, int val) {
    node* n = new node(val);
    if (head != NULL) {
        n->next = head;
        head->prev = n;
    }
    head = n;
}

void insertAtEnd(node* &head, int val) {
    node* n = new node(val);
    if (head == NULL) {
        inserAthead(head, val);
        return;
    }
    node* temp = head;
    while (temp->next != NULL) {
        temp = temp->next;
    }
    temp->next = n;
    n->prev = temp;
}

void display(node* head) {
    node* temp = head;
    while (temp != NULL) {
        cout << temp->data << " -> ";
        temp = temp->next;
    }
    cout << "NULL" << endl;
}

void insertAtpos(node* &head, int pos, int val) {
    if (pos == 0) {
        inserAthead(head, val);
        return;
    }
    node* n = new node(val);
    node* temp = head;
    for (int i = 0; i < pos - 1 && temp != NULL; i++) {
        temp = temp->next;
    }
    if (temp == NULL) {
        cout << "Position out of bounds!" << endl;
        return;
    }
    n->next = temp->next;
    if (temp->next != NULL) {
        temp->next->prev = n;
    }
    temp->next = n;
    n->prev = temp;
}

void deleteatbeg(node* &head) {
    if (head == NULL) return;
    node* temp = head;
    head = head->next;
    if (head != NULL) {
        head->prev = NULL;
    }
    delete temp;
}

void deleteatpos(node* &head, int pos) {
    if (pos == 0) {
        deleteatbeg(head);
        return;
    }
    node* temp = head;
    for (int i = 0; i < pos - 1 && temp->next != NULL; i++) {
        temp = temp->next;
    }
    if (temp->next == NULL) {
        cout << "Position out of bounds!" << endl;
        return;
    }
    node* todelete = temp->next;
    temp->next = temp->next->next;
    if (temp->next != NULL) {
        temp->next->prev = temp;
    }
    delete todelete;
}

int main() {
    node* head = NULL;
    insertAtEnd(head, 1);
    insertAtEnd(head, 2);
    insertAtEnd(head, 3);
    insertAtEnd(head, 4);
    display(head);
    insertAtpos(head, 2, 5);
    insertAtpos(head, 3, 6);
    display(head);
    inserAthead(head, 8);
    display(head);
    deleteatbeg(head);
    display(head);
    deleteatpos(head, 3);
    display(head);
}